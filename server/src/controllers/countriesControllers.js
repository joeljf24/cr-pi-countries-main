const { Country } = require('../db');
const { Op } = require('sequelize');

const allCountries = async () => {
    const countries = await Country.findAll();

    if(!countries) throw Error ('The countries are not found in the database');

    return countries;
};

const countryById = async (id) => {
    const countryById = await Country.findOne({
        where: { id }
    }/*,
    {
        include: {
            model: Activity,
            attributes: ['name', 'season', 'difficulty'],
        },
    }*/);

    if(!countryById) throw Error ('There is no country with that ID');

    return countryById;
};

const countryByName = async (name) => {
    const country = await Country.findAll({
        where: { name: {
            [Op.iLike]: `${name}%`,
        }}
    });
    
    if(!country) throw Error('The country with that name does not exist');
    
    return country;
};

module.exports = {
    allCountries,
    countryById,
    countryByName,
};

/*
üìç GET | /countries
Obtiene un arreglo de objetos, donde cada objeto es un pa√≠s con toda su informaci√≥n.
üìç GET | /countries/:idPais
Esta ruta obtiene el detalle de un pa√≠s espec√≠fico. Es decir que devuelve un objeto con la informaci√≥n pedida en el detalle de un pa√≠s.
El pa√≠s es recibido por par√°metro (ID de tres letras del pa√≠s).
Tiene que incluir los datos de las actividades tur√≠sticas asociadas a este pa√≠s.
üìç GET | /countries/name?="..."
Esta ruta debe obtener todos aquellos pa√≠ses que coinciden con el nombre recibido por query. (No es necesario que sea una coincidencia exacta).
Debe poder buscarlo independientemente de may√∫sculas o min√∫sculas.
Si no existe el pa√≠s, debe mostrar un mensaje adecuado.
*/